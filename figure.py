import torch
import torch.nn as nn
from torch.utils.data import DataLoader
import json
import os
import time
import pickle
import requests
import numpy as np
import torchvision
from client_global_variable import Client_Status
import traceback
import logging
import argparse
from pre_dataset import TrainDataset,CustomDataset
from model import ResNet34 as Model
from torchvision import datasets, transforms
from torch.utils.data import Dataset, DataLoader
from PIL import Image
import torch
from tqdm import tqdm


import numpy as np

# # 损失函数
# criterion = nn.CrossEntropyLoss()

# # 定义泰勒展开的近似公式
# def taylor_expansion(model, dataloader, optimizer):
#     optimizer.zero_grad()
#     inputs, labels = next(iter(dataloader))
#     outputs = model(inputs)
#     loss = criterion(outputs, labels)
#     loss.backward()
#     delta_loss_approx = -learning_rate * torch.norm(torch.cat([p.grad.view(-1) for p in model.parameters()])) ** 2
#     return delta_loss_approx

# # 初始化参数和海森矩阵
# model = ResNet34()  # 假设您已经定义了 ResNet34 模型
# optimizer = optim.SGD(model.parameters(), lr=learning_rate)
# H = torch.eye(sum(p.numel() for p in model.parameters()))  # 初始海森矩阵为单位矩阵

# # 定义学习率和迭代次数
# learning_rate = 0.1
# iterations = 10

# # 根据条件选择训练方法
# use_taylor_expansion = False  # 设为True以使用泰勒展开

# # 训练迭代
# for i in range(iterations):
#     if use_taylor_expansion:
#         delta_loss = taylor_expansion(model, dataloader, optimizer)
#     else:
#         optimizer.zero_grad()
#         inputs, labels = next(iter(dataloader))
#         outputs = model(inputs)
#         loss = criterion(outputs, labels)
#         loss.backward()

#         # 更新参数
#         optimizer.step()

#         # 更新海森矩阵
#         gradients = torch.cat([p.grad.view(-1) for p in model.parameters()])
#         delta_theta = -learning_rate * gradients
#         with torch.no_grad():
#             H += torch.outer(delta_theta, delta_theta)

#     print("Iteration:", i+1)
#     print("Current Loss:", loss.item())
#     print()





#######################################ARGS##################################################

#######################################DATAloader##################################################
# transform = transforms.Compose([
#     transforms.ToTensor()  # 将 PIL 图像或 numpy.ndarray 转换为 tensor
#       # 归一化
# ])

# # 加载训练数据集
# train_dataset = torchvision.datasets.CIFAR10(root='/home/dell/xy/AFLvsGFL/data/cifar', train=True,
#                                                download=False, transform=transform)
# # 创建训练数据集 DataLoader
# train_loader = DataLoader(train_dataset, batch_size=64, shuffle=True)

# # 加载测试数据集
# test_dataset = torchvision.datasets.CIFAR10(root='/home/dell/xy/AFLvsGFL/data/cifar', train=False,
#                                               download=False, transform=transform)
# # 创建测试数据集 DataLoader
# test_loader = DataLoader(test_dataset, batch_size=64, shuffle=False)


# custom_dataset = TrainDataset(dataset_path="/home/dell/xy/AFLvsGFL/data/1",cuda=0)

# train_data_loader = DataLoader(dataset=custom_dataset, batch_size=16, shuffle=True,drop_last=True)

# dataset_name = "test"
# custom_dataset = CustomDataset(dataset_name=dataset_name,cuda=0,test_flie = "/home/dell/xy/AFLvsGFL/data/test/0")
# loader = DataLoader(dataset=custom_dataset, batch_size=32, shuffle=True)



# def evaluate_model(model, dataloader):
#     model.eval()  # 将模型设置为评估模式
#     correct = 0
#     total = 0
#     with torch.no_grad():  # 禁用梯度计算
#         for images, labels in dataloader:
#             images = images.cuda(0)
#             labels = labels.cuda(0)
#             outputs = model(images)
#             _, predicted = torch.max(outputs, 1)
#             total += labels.size(0)
#             correct += (predicted == labels).sum().item()
#     accuracy = 100 * correct / total
#     return accuracy

# # 在测试数据集上评估模型


# #######################################TRAIN##################################################
# import torch.optim as optim

# net = Model()
# net = net.cuda(0)

# criterion = nn.CrossEntropyLoss()
# optimizer = optim.SGD(net.parameters(), lr=0.01, momentum=0.9)

# # 定义泰勒展开近似部分
# def taylor_approximation(grad, lr):
#     return -lr * torch.norm(grad)**2


# y_acc=[]
# y_loss=[]
# x = list(range(1, 101))

# # 训练模型
# epochs = 100
# for epoch in range(epochs):
#     running_loss = 0.0
#     total_loss_change = 0.0

#     for i, data in enumerate(train_data_loader, 0):
#         inputs, labels = data
#         inputs = inputs.cuda(0)
#         labels = labels.cuda(0)
#         optimizer.zero_grad()

#         outputs = net(inputs)
#         loss = criterion(outputs, labels)
#         loss.backward()

#         # 计算梯度变化
#         with torch.no_grad():
#             grad_norm = torch.norm(torch.cat([p.grad.view(-1) for p in net.parameters()]))
#             loss_change = taylor_approximation(grad_norm, optimizer.param_groups[0]['lr'])
#             total_loss_change += loss_change.item()

#         optimizer.step()

#         running_loss += loss.item()
        
        
        
#     test_accuracy = evaluate_model(net, loader)
#     y_acc.append(test_accuracy)
#     y_loss.append(total_loss_change/len(train_data_loader))
#     # 输出训练精度和平均训练损失变化
#     print(f"Epoch {epoch+1}, Loss: {running_loss/len(train_data_loader)},  Avg. Loss Change: {total_loss_change/len(train_data_loader)} ,  acc is : {test_accuracy}")
import matplotlib.pyplot as plt

# 假设你有两个列表 x 和 y


import matplotlib.pyplot as plt




y_acc = [0.0, 50.04882818708817, 50.179687552154064, 49.95898447930813, 50.03320325165988, 53.164062537252896, 50.5957031622529, 50.613281317055225, 50.50976570695639, 51.570312604308135, 52.63476572930813, 53.27734380960465, 50.75000010430812, 54.691406302154064, 55.023437552154064, 55.13281255960465, 51.00000005215406, 56.1523437872529, 52.503906264901154, 53.548828177154064, 65.21289076656103, 52.9785156995058, 50.93359384685755, 56.02148443460464, 52.773437537252896, 52.89257820695639, 56.19531262665986, 66.38867191970348, 59.974609389901154, 65.82031264901161, 63.4394533187151, 64.33203138411045, 62.24414072930813, 62.55468763411045, 58.73632825911045, 60.810547024011605, 56.55664060264826, 54.337890669703484, 63.394531346857555, 65.09179696440697, 58.835937529802315, 55.94726569950581, 62.58007824420929, 66.52929693460464, 66.6015625, 60.25781251490117, 60.068359449505806, 64.47460941970348, 63.35742190480232, 64.85546879470348, 63.25585938990116, 58.976562544703484, 60.468750074505806, 64.17578138411045, 69.70117196440697, 69.15625005960464, 74.84179697930813, 72.314453125, 67.89648443460464, 65.33007815480232, 68.77539068460464, 66.49218752980232, 64.21289071440697, 61.638671942055225, 66.68554686009884, 66.48046880960464, 60.58007813990116, 55.76562501490117, 62.45703123509884, 71.22851565480232, 69.53906252980232, 60.13085938990116, 69.68945309519768, 64.85937505960464, 60.68945325911045, 62.58593760430813, 61.12695325165986, 65.04296887665987, 64.96679700911045, 61.22460953891278, 62.216796949505806, 64.1406250745058, 69.99804705381393, 65.34570321440697, 68.44921886920929, 70.73437511920929, 61.30273450165987, 61.70117203146219, 65.78320309519768, 67.8808594122529, 67.07617200911045, 67.74804692715406, 62.06835944205522, 63.244140669703484, 64.423828125, 66.38476558029652, 65.419921875, 64.79101564735174, 63.68554696440697, 56.55468750745059, 63.69921877980232, 64.27343748509884, 66.29492186009884, 62.40625008940697, 69.30468752980232, 59.93164073675871, 61.04101572185755, 62.693359404802315, 68.31445328891277, 65.06445318460464, 66.33007809519768, 63.853515610098846, 66.03710941970348, 65.82421876490116, 63.94726566970348, 64.52343754470348, 63.453125059604645, 63.63671883940697, 67.490234375, 61.56835936009883, 56.98437508195639, 58.24218761175871, 65.9179687127471, 64.47070315480232, 62.25000001490116, 61.25195316970349, 60.267578139901154, 63.82226571440697, 69.4628906995058, 68.25585938990116, 66.4453125745058, 65.63281267881393, 67.95898452401161, 68.47656264901161, 68.72265629470348, 70.17187505960464, 71.67773440480232, 70.1855469495058, 66.26757815480232, 67.13476568460464, 67.7734375745058, 64.58398442715406, 61.32421888411045, 54.72851570695638, 56.113281324505806, 69.12304684519768, 60.710937567055225, 57.52539072185755, 55.66992197185755, 70.07031261920929, 64.22656260430813, 63.58789071440697, 67.92187497019768, 63.43554686754942, 67.37304702401161, 75.00390633940697, 71.27148441970348, 61.64843752980232, 61.046875044703484, 60.3515625745058, 64.72851566970348, 61.828125044703484, 61.373046934604645, 64.90039065480232, 71.32226563990116, 68.59960936009884, 69.0820313245058, 59.25976574420929, 65.70117186754942, 60.41796877980232, 60.72070315480232, 67.3437500745058, 68.91015633940697, 62.14257821440696, 71.4257813245058, 66.0253906995058, 70.65820321440697, 66.56445316970348, 66.61718755960464, 66.46875008940697, 65.8984375745058, 66.43750004470348, 67.0703125745058, 65.64062505960464, 64.01171877980232, 58.726562559604645, 71.05859376490116, 54.22656252980232, 68.23046885430813, 69.83007811009884, 65.771484375, 65.75781255960464, 63.267578184604645, 66.33398447185755, 66.14062510430813, 64.55078139901161, 71.08203135430813, 67.10156261920929, 68.58398452401161, 63.38281258940697, 62.95117199420929, 68.80859389901161, 66.14843763411045, 57.740234434604645, 60.42773447930813, 68.15234385430813, 75.82421883940697, 70.06445325911045, 69.25390630960464, 66.806640625, 67.82812505960464, 61.861328184604645, 62.919921949505806, 65.15234377235174, 65.60546875, 63.96679699420928, 61.66992202401161, 67.53906264901161, 71.26562505960464, 66.11718758940697, 56.92187502980233, 55.99023438990116, 69.98828120529652, 71.17382816970348, 69.00781266391277, 65.62304705381393, 68.17968763411045, 65.89062504470348, 64.03125002980232, 67.92578130960464, 66.11132819205523, 69.27929691970348, 65.69140627980232, 68.06054703891277, 69.95312497019768, 71.57812505960464, 69.33007813990116, 64.04882833361626, 66.87890641391277, 66.30664072930813, 72.17382825911045, 69.73046883940697, 67.2265625372529, 69.53515637665987, 66.58984381705523, 70.14062508940697, 68.00000004470348, 58.18554699420929, 60.62304697930813, 61.265625134110444, 63.691406324505806, 71.68750010430813, 71.18554688990116, 68.42187501490116, 71.43359385430813, 70.00000014901161, 61.79492197930813, 63.792968839406974, 62.16210946440697, 59.60937507450581, 65.91015633195639, 68.59179694205523, 71.84960946440697, 66.41015633940697, 65.20312502980232, 65.79882815480232, 63.55273440480232, 65.93945324420929, 64.9023438245058, 65.75000010430813, 65.09375005960464, 71.32226571440697, 72.44140625, 68.8183594495058, 66.2792969495058, 62.9394531995058, 61.156250089406974, 68.84765639901161, 69.45703133940697, 68.08984376490116, 64.75000001490116, 69.11914072930813, 62.60742202401162, 67.8222656995058, 71.97460941970348, 70.4687500745058, 68.82617190480232, 67.42382816970348, 69.1601563245058, 70.33007822930813, 74.23437505960464, 70.67968755960464, 73.51757816970348, 62.13671874254943, 59.16796892881393, 60.851562544703484, 62.656250074505806, 60.37695322185754, 61.31250001490116, 65.91992191970348, 68.45117196440697, 69.6093750745058, 69.50390636920929, 58.32226574420929, 63.208984434604645, 65.94335936009884, 67.58007809519768, 58.12695313245057, 60.83593763411045, 70.2441406995058, 73.68554688990116, 68.896484375, 66.37500002980232, 68.74218761920929, 68.47460944205523, 61.615234427154064, 73.70703130960464, 72.15625017881393, 70.09179696440697, 71.47070318460464, 68.12304690480232, 65.51367197185755, 63.367187567055225, 67.21875011920929, 68.37890636175871, 66.65429700165987, 66.32617201656103, 69.03125017881393, 67.57226571440697, 68.27539063990116, 66.69726565480232, 65.8593750745058, 62.16601565480232, 66.44140623509884, 66.63867197930813, 61.59960940480232, 64.07812513411045, 73.26757818460464, 69.50976569205523, 64.84765622764826, 68.47070313990116, 72.88671880960464, 72.1875, 70.72851568460464, 71.07812508940697, 72.3046875745058, 68.74804705381393, 66.86328142881393, 64.40625011920929, 61.96484375745058, 55.08593756705522, 71.90039075911045, 64.60156254470348, 72.70507827401161, 72.90820322930813, 74.31054688990116, 69.92968752980232, 75.15429697930813, 70.51171891391277, 73.96289072930813, 72.03515626490116, 74.45507816970348, 68.69531251490116, 62.04101562499999, 69.23242203891277, 69.37500014901161, 67.32617199420929, 77.64843754470348, 74.4140625, 73.0664063245058, 76.07617191970348, 73.40234383940697, 70.75000010430813, 70.24414077401161, 73.60546879470348, 71.34374998509884, 68.34570318460464, 71.7187500745058, 72.53320321440697, 74.36328127980232, 68.16796876490116, 68.59179697930813, 71.71289078891277, 71.20507813990116, 71.53124995529652, 68.06445315480232, 64.57617193460464, 62.60351568460465, 66.06445327401161, 68.52343760430813, 68.64843755960464, 67.63867195695639, 65.16992200165987, 66.0449219122529, 73.12304697930813, 68.08007817715406, 62.568359449505806, 67.00585938990116, 69.12304691970348, 65.76757814735174, 63.63085936754942, 68.2128906995058, 75.49414068460464, 68.44335943460464, 65.86718760430813, 72.46875002980232, 69.8632813245058, 67.33007818460464, 68.69726575911045, 65.36718763411045, 65.21679699420929, 77.19335943460464, 63.01757812499999, 62.67968751490116, 71.36132821440697, 71.99609383940697, 70.64062513411045, 63.15039068460464, 72.2753906995058, 74.2871094495058, 69.36328127980232, 57.83007815480232, 57.6171875, 71.51171885430813, 72.13281258940697, 73.0957031995058, 74.33203130960464, 67.97265633940697, 69.28906261920929, 72.5585938245058, 74.1113281995058, 68.37304700165987, 68.70312515646219, 70.08398450911045, 72.39843755960464, 73.91210943460464, 68.51953141391277, 71.81250005960464, 72.0429689437151, 71.58203125, 71.12890630960464, 71.53125010430813, 71.82421885430813, 75.38281254470348, 72.9589844495058, 72.45703138411045, 69.21289071440697, 66.259765625, 71.0644531995058, 72.27148443460464, 67.55273446440697, 61.388671919703484, 64.39843751490116, 72.70898438990116, 69.9804688245058, 70.75781248509884, 65.54882816970348, 63.966796919703484, 73.251953125, 72.06835940480232, 77.20898441970348, 72.58593760430813, 66.76953136920929, 77.68750011920929, 74.70898449420929, 63.544921949505806, 73.83984386920929, 71.9726563245058, 67.91210938245058, 68.44140630215406, 66.75390634685755, 65.27929697185755, 64.17187511920929, 69.61523450911045, 72.39453136920929, 71.35351568460464, 66.51953138411045, 65.00390633940697, 65.5468750745058, 69.25390638411045, 69.85546872019768, 65.83203136920929, 68.41992199420929, 60.947265699505806, 67.02734380960464, 76.10742188990116, 75.8007813245058, 67.42382813245058, 66.2011719122529, 64.02929686009884, 62.58007816970348, 63.95898446440697, 62.947265729308135, 66.02929696440697, 67.03320316970348, 68.40039066970348, 60.3437501192093, 69.68750014901161, 71.70703127980232, 69.10742193460464, 69.75000001490116, 65.77734373509884, 74.6191406995058, 71.80859379470348, 75.6347656995058, 70.88085938245058, 64.15234375745058, 71.0156250372529, 69.61132824420929, 73.08398444205523, 68.91015630215406, 71.54687508940697, 67.74023443460464, 64.73046883940697, 70.94140641391277, 71.25390633940697, 75.42382813990116, 75.2929688245058, 75.40625005960464, 72.17382811009884, 73.87500002980232, 73.5449219495058, 75.53320318460464, 68.22851568460464, 67.7050781995058, 68.83007824420929, 69.23046886920929, 69.53906260430813, 70.49414075911045, 71.30664072930813, 68.39062504470348, 76.63476578891277, 77.08593755960464, 73.28710950911045, 77.36718758940697, 70.05664065480232, 74.94921885430813, 64.60351571440697, 65.2148438245058, 73.30859392881393, 72.30859391391277, 79.01953138411045, 76.78515642881393, 72.41796888411045, 68.82617205381393, 67.99414075911045, 76.74804702401161, 67.6269531995058, 72.47656248509884, 70.50000004470348, 73.4570313245058, 71.58007822930813, 65.29882818460464, 70.60156255960464, 73.01953129470348, 74.43945325911045, 70.73632821440697, 76.87500014901161, 73.89453135430813, 75.58984376490116, 70.30078127980232, 70.52929699420929, 69.05859380960464, 69.58398446440697, 69.75976571440697, 71.63867190480232, 64.71875000745058, 67.32031255960464, 66.82812504470348, 71.87304697930813, 70.22265627980232, 72.6562500745058, 68.15625011920929, 69.68554697930813, 77.4707031995058, 71.81250005960464, 74.46679688990116, 74.74414058029652, 68.03125008940697, 71.41015633940697, 70.26953138411045, 68.70898447930813, 69.33007813990116, 69.55859377980232, 74.30859379470348, 74.13671880960464, 64.74218755960464, 62.10351563990116, 70.7324219495058, 70.3515625745058, 70.50976566970348, 74.28125001490116, 69.44726563990116, 66.88281252980232, 69.4628906995058]
t=0
for i in range(len(y_acc)):
    if y_acc[i] == 74.1113281995058:
        print("acc[i-1] is ",y_acc[i-1])
        print("acc[i] is ",y_acc[i])
        print("next acc is ",y_acc[i+1])
        print("i is ",i)
        t = i




# 创建第一个子图
print(len(y_acc))
y_loss =  [0.0, -229.1088643707335, -231.80091861262918, -323.07539651170373, -348.67816827073693, -407.4918312765658, -409.55870984122157, -413.0312977321446, -415.3702082298696, -579.6065765582025, -612.4895048104227, -621.3670646622777, -623.9335346668959, -819.0838398188353, -827.4132907595485, -830.1530439760536, -854.3827773239464, -876.519916376099, -892.8908136989921, -1072.9238189365715, -1240.630365457153, -1254.1033792297821, -1258.7282876695972, -1269.385382207809, -1480.4867872919422, -1496.3523492540698, -1512.9804747465532, -1518.055034584133, -1536.5628651555162, -1540.2858302129898, -1740.067257201532, -1765.794915607432, -2001.8352461962495, -2005.8008019982371, -2021.5648118166719, -2225.7828121541534, -2238.258397212485, -2241.8104207145516, -2268.48081711703, -2316.140199688496, -2472.796923247399, -2489.7407708067913, -2677.9537944842596, -2828.977346054744, -2836.177147186827, -2921.1468953262083, -2947.7628130619414, -2951.829913422931, -3002.226698235143, -3023.163688973058, -3027.7607705746777, -3051.1127740577795, -3268.503894864116, -3458.263989774976, -3495.520339636598, -3508.1421500896104, -3740.7199350898154, -3747.145312391687, -3968.255372740794, -3983.8812722959556, -4046.7305804886855, -4057.533957640175, -4290.191962721292, -4293.948143082205, -4302.648803445045, -4304.504292687867, -4340.947450837586, -4364.4755294532515, -4378.570723472629, -4613.493832586799, -4656.248538373504, -4659.461584229721, -4811.673939754022, -5008.34432165022, -5029.155084085418, -5034.195463038748, -5044.609751276439, -5051.341511457926, -5061.403904907173, -5065.042776264017, -5289.487379066413, -5409.096793262404, -5416.9968619701685, -5638.520998703432, -5646.978968177107, -5662.968722485122, -5679.897655751673, -5684.088882986573, -5857.294298533467, -6070.007142480579, -6085.01573598024, -6096.617373775807, -6100.6493346431525, -6184.743493754533, -6188.67723367468, -6188.93654946296, -6370.984468270675, -6559.710359525518, -6732.362456691102, -6750.717306148843, -6757.097681534127, -6779.176569391624, -6785.411561161862, -6796.731557280407, -6907.229896775301, -6915.589752892818, -6917.29281312399, -6934.364388765622, -6984.048866035271, -7174.787574445683, -7179.320350756723, -7239.988721678434, -7243.187852496681, -7250.071251253623, -7254.367986108202, -7439.921469519872, -7442.564410387564, -7447.478502406764, -7482.095965950542, -7543.778071551376, -7547.229594352448, -7663.383465218616, -7675.797712805939, -7731.891948796398, -7745.752215750104, -7750.338471550969, -7774.802209932832, -7775.185319984561, -7926.388194645053, -7933.095901573306, -7933.73002375173, -7942.224466132695, -7949.974016341144, -7961.825246096194, -7980.741951346934, -7982.8082958018185, -8011.621353820503, -8013.4976001834275, -8015.217767552078, -8115.972073580049, -8117.089515482452, -8258.80783632901, -8291.048104261425, -8386.616918129146, -8402.03484309549, -8437.320920571447, -8446.572657689214, -8472.400339925423, -8532.581695044175, -8639.653972225527, -8819.101329135041, -8863.715700337789, -8902.34510257294, -8935.941210115454, -8959.9264429157, -9132.796893546483, -9236.477958271405, -9243.516242744527, -9290.187043949021, -9303.470602436913, -9320.517076680428, -9484.98040176799, -9518.08145262172, -9548.753362188689, -9579.456768097929, -9620.827936592532, -9664.083824046907, -9773.06865512281, -9782.193448235088, -9783.113934551173, -9816.478731492662, -9840.00896313613, -9841.25928439853, -9849.031534454796, -9869.28506886122, -9954.425528479853, -10134.333673623736, -10157.45442071871, -10160.992163894854, -10162.498082626767, -10166.188050855108, -10168.981573900597, -10194.465473210828, -10237.323331498628, -10244.166615733964, -10272.08503723712, -10294.275109445764, -10300.05423340536, -10305.44413739405, -10320.560232683638, -10330.219074055174, -10342.906790050058, -10344.510321908067, -10405.720334791014, -10425.562633775542, -10436.885692183296, -10539.26832983307, -10559.982013460616, -10585.688949820022, -10600.16212451681, -10612.724362703408, -10674.4398415707, -10742.461671861256, -10765.632982762898, -10785.240151624097, -10788.4686275077, -10858.618096477603, -10874.326575405215, -10878.518757920032, -10891.451011686837, -10980.93685669953, -11004.65826381499, -11024.754019630496, -11040.604118657653, -11045.744513851945, -11147.696824234503, -11161.00520153448, -11162.475085048816, -11199.246608941696, -11216.91852044954, -11220.524206818543, -11222.918018205553, -11289.28243253985, -11308.12728528259, -11332.61659828899, -11369.464465734574, -11404.465753578606, -11412.531865031484, -11421.227667749885, -11436.854957253698, -11467.600045890573, -11538.188561407409, -11567.642659274421, -11577.695710942342, -11596.272686861648, -11604.477053262486, -11640.01122581233, -11659.34920612703, -11661.43228887747, -11665.319942511422, -11678.080837435824, -11751.057010703524, -11756.718217783411, -11766.832393900295, -11767.50996545962, -11770.10507700852, -11784.77349007762, -11802.628449289765, -11843.883773593869, -11848.067007391419, -11854.539128238972, -11879.535790855702, -11880.885173792656, -11904.536538037177, -11910.85130059969, -11914.837053457912, -11915.863674101125, -11918.176531699191, -11933.147181458477, -11948.691291697029, -12030.306226856712, -12033.129951946143, -12097.563134185675, -12124.75502989598, -12139.04963866778, -12152.93659172364, -12168.269096621949, -12190.72664684214, -12192.555221460465, -12227.931843720082, -12245.561097127871, -12261.389921916203, -12263.118552568389, -12290.36522153115, -12312.046345488188, -12461.049223677275, -12492.477533807176, -12502.411426280754, -12503.259889486375, -12515.582163917961, -12524.006080213781, -12539.301814649101, -12626.41071320212, -12627.532291863845, -12646.756989891906, -12740.272582544188, -12799.592641999894, -12802.013034121928, -12820.078795151649, -12854.58397091104, -12859.662851638332, -12863.97992028965, -12868.300238198772, -12872.295766664014, -12894.22323663179, -13106.891255121865, -13112.521117147246, -13135.637456055918, -13192.738934459456, -13201.921526645063, -13207.097259618575, -13571.633287848206, -13573.123606766807, -13576.20162838255, -13581.864237348782, -13584.500455311732, -13596.296906569274, -13596.93267509644, -13603.724062576191, -13617.440117209451, -13659.498238680291, -13665.975637150335, -13700.747413178313, -13722.614915749551, -13764.460138315319, -13767.013089824452, -13774.933123273759, -13776.692628410628, -14038.287439790538, -14040.350688409044, -14048.912218492462, -14063.587689385207, -14070.910351589711, -14095.290139869245, -14097.348528921993, -14097.592149584012, -14100.246331979444, -14110.522691060713, -14113.100767064996, -14119.289455246337, -14142.0240158552, -14185.144043158896, -14188.892164688714, -14189.573894587036, -14456.849935692426, -14471.500830169354, -14478.704638028432, -14488.242180401374, -14777.914468538862, -14781.905145597559, -14785.654610049825, -14789.460077167403, -14823.460405404281, -14829.013374621582, -14830.257175929251, -14841.959959223273, -14862.440559047613, -14868.5726899834, -14891.757303045486, -14898.971220375393, -14909.400975058252, -14928.812152935869, -14963.64519412697, -15008.559400893926, -15021.040644321769, -15027.151615027866, -15050.56220403739, -15069.8124236209, -15073.96445181646, -15104.158290633535, -15113.37029587624, -15118.998694652295, -15124.662567456788, -15127.791439191973, -15144.374996975204, -15169.497846350214, -15172.598332204065, -15187.648934580526, -15210.925683878739, -15217.65149100535, -15234.495980199803, -15254.552462276448, -15293.699238952626, -15295.057190681951, -15302.632379908917, -15311.285768640098, -15326.44635544425, -15329.041718141978, -15339.111390249675, -15366.346633171534, -15368.982694954637, -15374.26601398832, -15379.891048018846, -15400.920646999988, -15421.511975649079, -15422.843476991435, -15425.56604615998, -15430.647790394989, -15447.697883751038, -15481.849415332477, -15488.96648570935, -15492.493181880962, -15556.294467617225, -15557.517197942294, -15565.400683913922, -15582.878703427577, -15607.950586435461, -15610.960805494415, -15640.687116546222, -15875.188988996335, -15879.91100961309, -15882.244272809141, -15893.06183206254, -15904.430436221755, -15925.750024630337, -15934.253918187807, -15935.363357566412, -15942.451267315671, -15943.41719315007, -15989.694776957776, -16001.694328544583, -16014.165817079987, -16029.064571900613, -16032.65337322498, -16037.690701420519, -16107.441014099733, -16121.30124329576, -16378.82057384202, -16388.61144662449, -16450.05212998936, -16465.014922661576, -16466.562516110353, -16476.758778529576, -16480.115370046216, -16481.806594476904, -16502.00509948643, -16510.44267521413, -16516.95504613254, -16517.75204721499, -16519.495714258737, -16534.151097026057, -16536.40424784679, -16548.822217468507, -16557.301581418313, -16569.50864574889, -16576.885896222837, -16592.2660292958, -16609.0018171643, -16620.701629838728, -16630.2632119272, -16672.27517541387, -16694.39053984993, -16706.68393644207, -16715.78868655377, -16725.455131559454, -16744.165466916802, -16744.697051336112, -16749.1249933709, -16781.03524816228, -16801.521040218006, -16813.291599263117, -16817.63282234888, -16834.03101958256, -16868.099724005024, -16869.329725812237, -16875.504660624127, -16883.43844037787, -16906.79727819101, -16917.896327833692, -16918.471034361213, -16940.64110678199, -16953.2229691562, -16972.160394009643, -16987.71830336421, -16993.388907320423, -16993.610284725644, -17000.472210588374, -17014.988990193673, -17047.27035537965, -17072.83662435014, -17079.46257872481, -17093.029205618168, -17104.60014425006, -17113.045841382558, -17125.36163672034, -17146.30643699432, -17205.34411408866, -17306.84395478966, -17349.92556948937, -17609.47528524674, -17611.073951211994, -17627.133031163077, -17629.11708130938, -17630.50287050139, -17637.434665498553, -17653.932772967262, -17661.885448071404, -17666.5490299568, -17737.629628996594, -17748.527668633164, -17754.363811441362, -17759.11810738653, -17762.15339369345, -17762.459970680397, -17818.667578411223, -17824.74984586035, -17834.264229127963, -17838.13399771008, -17855.782943458886, -17857.845569638936, -17857.84638188588, -17858.05147464479, -17909.927545001363, -17913.911873153975, -17937.507809099698, -17942.34137886479, -17951.229848560833, -17955.58184918105, -17966.97011593073, -18200.536164351695, -18202.423068223943, -18202.956307304048, -18203.27988012736, -18243.17964720922, -18250.320862950855, -18255.302828850323, -18259.474558594924, -18266.80346247117, -18356.97368783067, -18359.70911107893, -18360.41164988634, -18368.700245610493, -18387.484043586835, -18389.022762857214, -18403.55082964811, -18406.284196275355, -18409.40156080767, -18413.963897229, -18418.827213198707, -18420.511976232814, -18425.35677063285, -18432.929347437832, -18459.22738862762, -18463.894442334564, -18492.735540494115, -18503.399876420415, -18508.912017567473, -18616.331831669824, -18619.014438033493, -18631.79949838913, -18650.427326660025, -18656.535803689974, -18656.600241857934, -18658.582805242044, -18824.975575130087, -18828.544965657642, -18829.289216827838, -18843.440626587955, -18846.158292034994, -18860.415309602748, -18860.62403080438, -18872.87542286015, -18884.312426339828, -18887.247207535424, -18887.593225323355, -18889.86021694424, -18911.942725821158, -18922.275271428975, -18998.767886996495, -19003.780903595725, -19215.3677210838, -19307.28629669849, -19322.046769830624, -19357.57054101774, -19394.597924263267, -19397.69990830012, -19400.44199851044, -19417.528486730975, -19418.04887494035, -19425.048466924203, -19465.577550831807, -19467.001241580674, -19497.24518416179, -19497.46272012123, -19513.052671668094, -19553.794011441893, -19565.38326653642, -19570.18085077209, -19582.837722002896, -19586.320685641156, -19593.071461887346, -19596.49753710373, -19596.726911349673, -19640.375681860965, -19661.371502480113, -19668.56981300874, -19670.30811066061, -19673.182462056837, -19686.737664779386, -19707.42590158139, -19708.484776332367, -19717.942246477443, -19725.986937884565, -19768.236904222027, -19771.239443208065]
print("loss i - 1 is ",y_loss[t-1])
print("loss i is ",y_loss[t])
print("next loss is ",y_loss[t+1])

# for i in range(24):
#     print("i is ",i)
#     print("loss is ",y_loss[i+1] - y_loss[i])
#     i = i+1
x = list(range(1, len(y_acc)+1))

plt.subplot(2, 1, 1)  # 2行1列，第1个子图
plt.plot(x, y_acc)
plt.title('First Plot')
plt.xlabel('X Axis')
plt.ylabel('Y acc')

# 创建第二个子图
plt.subplot(2, 1, 2)  # 2行1列，第2个子图
plt.plot(x, y_loss)
plt.title('Second Plot')
plt.xlabel('X Axis')
plt.ylabel('Y loss')

# 调整子图布局
plt.tight_layout()
plt.savefig('recall.png')

# 显示图形
plt.show()




# for epoch in range(600): 
#     net = net.train()           
#     for batch_num,(image,label) in enumerate(train_loader):
       
#         image = image.cuda(0)
#         label = label.cuda(0)
#         output = net(image)
#         entropy_num = cross_entropy(output,label)
#         loss = entropy_num
#         optimizer.zero_grad()
#         loss.backward()
#         optimizer.step()    
#     test_accuracy = evaluate_model(net, test_loader)
#     if test_accuracy > max_acc:
#         max_acc = test_accuracy
#         torch.save(net.state_dict(), "/home/dell/xy/AFLvsGFL/model/pt/1.pth")
#     print("epoch is ",epoch,"  ","max acc is ",max_acc,"  ","now acc is ",test_accuracy)






